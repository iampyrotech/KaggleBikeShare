view(contact)
voiceCall <- read_csv('/Users/chasenielsen/Downloads/VoiceCall.csv')
head(voiceCall)
activity <- read_csv('/Users/chasenielsen/Downloads/Activity.csv')
head(activity)
contact <- read_csv('/Users/chasenielsen/Downloads/contact.csv')
head(contact)
voiceCall <- read_csv('/Users/chasenielsen/Downloads/VoiceCall.csv')
head(voiceCall)
activity <- read_csv('/Users/chasenielsen/Downloads/Activity.csv')
contact <- read_csv('/Users/chasenielsen/Downloads/contact.csv')
head(contact)
voiceCall <- read_csv('/Users/chasenielsen/Downloads/VoiceCall.csv')
head(voiceCall)
df_merged <- inner_join(contact, voiceCall, by = "account_id")
activity <- read_csv('/Users/chasenielsen/Downloads/Activity.csv')
contact <- read_csv('/Users/chasenielsen/Downloads/contact.csv')
head(contact)
voiceCall <- read_csv('/Users/chasenielsen/Downloads/VoiceCall.csv')
head(voiceCall)
voiceCall <- voiceCall%>%
rename(Id = RelatedRecordId)
df_merged <- inner_join(contact, voiceCall, by = "account_id")
activity <- read_csv('/Users/chasenielsen/Downloads/Activity.csv')
contact <- read_csv('/Users/chasenielsen/Downloads/contact.csv')
head(contact)
voiceCall <- read_csv('/Users/chasenielsen/Downloads/VoiceCall.csv')
voiceCall <- voiceCall%>%
rename(Id = RelatedRecordId)
head(voiceCall)
<!--df_merged <- inner_join(contact, voiceCall, by = "d")
head(df_merged)-->
activity <- read_csv('/Users/chasenielsen/Downloads/Activity.csv')
contact <- read_csv('/Users/chasenielsen/Downloads/contact.csv')
head(contact)
voiceCall <- read_csv('/Users/chasenielsen/Downloads/VoiceCall.csv')
voiceCall <- voiceCall%>%
rename(Id = RelatedRecordId)
head(voiceCall)
df_merged <- inner_join(contact, voiceCall, by = "Id")
head(df_merged)
nrow(df_merged)
nrow(voiceCall)
head(freeQ1)
head(df_merged)
activity <- read_csv('/Users/chasenielsen/Downloads/Activity.csv')
contact <- read_csv('/Users/chasenielsen/Downloads/contact.csv')
head(contact)
voiceCall <- read_csv('/Users/chasenielsen/Downloads/VoiceCall.csv')
voiceCall <- voiceCall%>%
rename(Id = RelatedRecordId)
head(voiceCall)
df_merged <- inner_join(contact, voiceCall, by = "Id")
df_merged <- df_merged %>%
rename(account_id = AccountId)
head(df_merged)
# callsAndLeads <- inner_join(df_merged, freeQ1, by = "Id")
activity <- read_csv('/Users/chasenielsen/Downloads/Activity.csv')
contact <- read_csv('/Users/chasenielsen/Downloads/contact.csv')
head(contact)
voiceCall <- read_csv('/Users/chasenielsen/Downloads/VoiceCall.csv')
voiceCall <- voiceCall%>%
rename(Id = RelatedRecordId)
head(voiceCall)
df_merged <- inner_join(contact, voiceCall, by = "Id")
df_merged <- df_merged %>%
rename(account_id = AccountId)
head(df_merged)
callsAndLeads <- inner_join(df_merged, freeQ1, by = "account_id")
nrow(callsAndLeads)
nrow(callsAndLeads)
head(callsAndLeads)
activity <- read_csv('/Users/chasenielsen/Downloads/Activity.csv')
contact <- read_csv('/Users/chasenielsen/Downloads/contact.csv')
head(contact)
voiceCall <- read_csv('/Users/chasenielsen/Downloads/VoiceCall.csv')
voiceCall <- voiceCall%>%
rename(Id = RelatedRecordId)
head(voiceCall)
df_merged <- inner_join(contact, voiceCall, by = "Id")
df_merged <- df_merged %>%
rename(account_id = AccountId)
head(df_merged)
callsAndLeads <- inner_join(df_merged, freeQ1, by = "account_id")
head(callsAndLeads)
activity <- read_csv('/Users/chasenielsen/Downloads/Activity.csv')
head(activity)
contact <- read_csv('/Users/chasenielsen/Downloads/contact.csv')
head(contact)
voiceCall <- read_csv('/Users/chasenielsen/Downloads/VoiceCall.csv')
voiceCall <- voiceCall%>%
rename(Id = RelatedRecordId)
head(voiceCall)
df_merged <- inner_join(contact, voiceCall, by = "Id")
df_merged <- df_merged %>%
rename(account_id = AccountId)
head(df_merged)
callsAndLeads <- inner_join(df_merged, freeQ1, by = "account_id")
head(callsAndLeads)
nrow(df_merged)
activity <- read_csv('/Users/chasenielsen/Downloads/Activity.csv')
head(activity)
contact <- read_csv('/Users/chasenielsen/Downloads/contact.csv')
head(contact)
voiceCall <- read_csv('/Users/chasenielsen/Downloads/VoiceCall.csv')
voiceCall <- voiceCall%>%
rename(Id = RelatedRecordId)
head(voiceCall)
df_merged <- inner_join(contact, voiceCall, by = "Id")
df_merged <- df_merged %>%
rename(account_id = AccountId)
head(df_merged)
callsAndLeads <- inner_join(df_merged, freeQ1, by = "account_id")
head(callsAndLeads)
head(callsAndLeads)
activity <- read_csv('/Users/chasenielsen/Downloads/Activity.csv')
head(activity)
contact <- read_csv('/Users/chasenielsen/Downloads/contact.csv')
head(contact)
voiceCall <- read_csv('/Users/chasenielsen/Downloads/VoiceCall.csv')
voiceCall <- voiceCall%>%
rename(Id = RelatedRecordId)
head(voiceCall)
df_merged <- inner_join(contact, voiceCall, by = "Id")
df_merged <- df_merged %>%
rename(account_id = AccountId)
head(df_merged)
callsAndLeads <- inner_join(df_merged, freeQ1, by = "account_id")
head(callsAndLeads)
# Libraries
library(tidyr)
library(tidyverse)
library(janitor)
library(ggcorrplot)
library(car)
library(tibble)
library(forcats)
library(glmnet)
library(broom)
library(ggplot2)
library(gt)
library(caret)
library(naniar)
library(missForest)
library(scales)
# All Closed Q1
closedQ1 <- read_csv('/Users/chasenielsen/Downloads/ClosedWon OppQ1.csv')
closedQ1 <- closedQ1 %>%
clean_names()
closedQ1 <- closedQ1 %>%
select(account_name, fiscal_period, amount, account_id)
head(closedQ1)
nrow(closedQ1)
# All Closed Q2
closedQ2 <- read_csv('/Users/chasenielsen/Downloads/ClosedWon OppQ2.csv')
closedQ2 <- closedQ2 %>%
clean_names()
closedQ2 <- closedQ2 %>%
select(account_name, fiscal_period, amount, account_id)
head(closedQ2)
nrow(closedQ2)
# Free leads Q1
freeQ1 <- read_csv('/Users/chasenielsen/Downloads/FreeQ1.csv')
freeQ1 <- freeQ1 %>%
clean_names()
freeQ1 <- freeQ1 %>%
select(contact, account_id) %>%
distinct(account_id, .keep_all = TRUE)
head(freeQ1)
nrow(freeQ1)
# Free Q2
freeQ2 <- read_csv('/Users/chasenielsen/Downloads/FreeQ2.csv')
freeQ2 <- freeQ2 %>%
clean_names()
freeQ2 <- freeQ2 %>%
select(contact, account_id) %>%
distinct(account_id, .keep_all = TRUE)
head(freeQ2)
nrow(freeQ2)
# VSL leads Q1
vslQ1 <- read_csv('/Users/chasenielsen/Downloads/VSLQ1.csv')
vslQ1 <- vslQ1 %>%
clean_names()
vslQ1 <- vslQ1 %>%
select(contact, account_id) %>%
distinct(account_id, .keep_all = TRUE)
head(vslQ1)
nrow(vslQ1)
# VSL leads Q2
vslQ2 <- read_csv('/Users/chasenielsen/Downloads/VSLQ2.csv')
vslQ2 <- vslQ2 %>%
clean_names()
vslQ2 <- vslQ2 %>%
select(contact, account_id) %>%
distinct(account_id, .keep_all = TRUE)
head(vslQ2)
nrow(vslQ2)
# CLOSED THROUGH FREE
# Q1
closed_freeQ1 <- inner_join(closedQ1, freeQ1, by = "account_id")
closed_freeQ1 <- closed_freeQ1 %>%
distinct(account_id, .keep_all = TRUE)
head(closed_freeQ1)
# Q2
closed_freeQ2 <- inner_join(closedQ2, freeQ2, by = "account_id")
closed_freeQ2 <- closed_freeQ2 %>%
distinct(account_id, .keep_all = TRUE)
head(closed_freeQ2)
# CLOSED THROUGH VSL
# Q1
closed_vslQ1 <- inner_join(closedQ1, vslQ1, by = "account_id")
closed_vslQ1 <- closed_vslQ1 %>%
distinct(account_id, .keep_all = TRUE)
head(closed_vslQ1)
nrow(closed_vslQ1)
# Q2
closed_vslQ2 <- inner_join(closedQ2, vslQ2, by = "account_id")
closed_vslQ2 <- closed_vslQ2 %>%
distinct(account_id, .keep_all = TRUE)
head(closed_vslQ2)
nrow(closed_vslQ2)
tibble(
Funnel = c("Free Q1", "Free Q2", "VSL Q1", "VSL Q2"),
Closed = c(
nrow(closed_freeQ1),
nrow(closed_freeQ2),
nrow(closed_vslQ1),
nrow(closed_vslQ2)
)
)
# ---CONVERSION TABLE---
conversion_table <- tibble(
Funnel = c("Free Q1", "Free Q2", "VSL Q1", "VSL Q2"),
Leads = c(nrow(freeQ1), nrow(freeQ2), nrow(vslQ1), nrow(vslQ2)),
Closed = c(nrow(closed_freeQ1), nrow(closed_freeQ2), nrow(closed_vslQ1), nrow(closed_vslQ2))
) %>%
mutate(ConversionRate = Closed / Leads)
# Format with gt
conversion_table %>%
gt() %>%
fmt_percent(
columns = ConversionRate,
decimals = 1
) %>%
cols_label(
Funnel = "Funnel & Quarter",
Leads = "Total Leads",
Closed = "Deals Closed",
ConversionRate = "Conversion Rate"
) %>%
tab_header(
title = "Funnel Conversion Summary"
)
# ---CONVERSION RATES---
conversion_df <- tibble(
Funnel = c("Free Q1", "Free Q2", "VSL Q1", "VSL Q2"),
Quarter = c("Q1", "Q2", "Q1", "Q2"),
Source = c("Free", "Free", "VSL", "VSL"),
Leads = c(nrow(freeQ1), nrow(freeQ2), nrow(vslQ1), nrow(vslQ2)),
Closed = c(nrow(closed_freeQ1), nrow(closed_freeQ2), nrow(closed_vslQ1), nrow(closed_vslQ2))
) %>%
mutate(ConversionRate = 100 * Closed / Leads)
funnel_colors <- c("Free" = "#AEC6CF", "VSL" = "#B5EAD7")
ggplot(conversion_df, aes(x = Quarter, y = ConversionRate, fill = Source)) +
geom_col(position = position_dodge(width = 0.7), width = 0.6) +
geom_text(
aes(label = paste0(round(ConversionRate, 1), "%")),
position = position_dodge(width = 0.7),
vjust = -0.5,
size = 4.5
) +
scale_fill_manual(values = funnel_colors) +
labs(
title = "Conversion Rates by Funnel",
x = "Quarter",
y = "Conversion Rate (%)",
fill = "Funnel Source",
) +
theme_minimal(base_size = 14) +
ylim(0, 2)
# ---TOTAL CONVERSIONS---
ggplot(conversion_df, aes(x = Quarter, y = Closed, fill = Source)) +
geom_col(position = position_dodge(width = 0.7), width = 0.6) +
geom_text(
aes(label = Closed),
position = position_dodge(width = 0.7),
vjust = -0.5,
size = 4.5
) +
scale_fill_manual(values = funnel_colors) +
labs(
title = "Total Conversions by Funnel",
x = "Quarter",
y = "Number of Deals Closed",
fill = "Funnel Source"
) +
expand_limits(y = max(conversion_df$Closed) + 5) +
theme_minimal(base_size = 14)
#--- SUMMARIES BY REVENUE---
revenue_df <- tibble(
Quarter = c("Q1", "Q2", "Q1", "Q2"),
Source = c("Free", "Free", "VSL", "VSL"),
Revenue = c(
sum(closed_freeQ1$amount),
sum(closed_freeQ2$amount),
sum(closed_vslQ1$amount),
sum(closed_vslQ2$amount)
)
)
ggplot(revenue_df, aes(x = Quarter, y = Revenue, fill = Source)) +
geom_col(position = position_dodge(width = 0.7), width = 0.6) +
geom_text(
aes(label = scales::label_dollar(scale = 1e-6, suffix = "M")(Revenue)),
position = position_dodge(width = 0.7),
vjust = -0.5,
size = 4.5
) +
scale_fill_manual(values = funnel_colors) +
scale_y_continuous(
labels = label_dollar(scale = 1e-6, suffix = "M")
) +
labs(
title = "Total Revenue by Funnel",
x = "Quarter",
y = "Revenue",
fill = "Funnel Source"
) +
expand_limits(y = max(revenue_df$Revenue) * 1.1) +
theme_minimal(base_size = 14)
contact <- read_csv('/Users/chasenielsen/Downloads/contact.csv')
head(contact)
voiceCall <- read_csv('/Users/chasenielsen/Downloads/VoiceCall.csv')
voiceCall <- voiceCall%>%
rename(Id = RelatedRecordId)
head(voiceCall)
df_merged <- inner_join(contact, voiceCall, by = "Id")
df_merged <- df_merged %>%
rename(account_id = AccountId)
head(df_merged)
callsAndLeads <- inner_join(df_merged, freeQ1, by = "account_id")
head(callsAndLeads)
R.version.string
print(n)
n <- 10
print(n)
library(tidyverse)
n <- 10
p <- .5
x <- sample(c(0,1), n, replace = TRUE, prob = c(1-p, p))
x
mean(x)
(p^x * (1-p)^(1-x))
prod(p^x * (1-p)^(1-x))
library(tidyverse)
n <- 10
p <- .5
x <- sample(c(0,1), n, replace = TRUE, prob = c(1-p, p))
x
prod(p^x * (1-p)^(1-x))
# Libraries
library(tidyr)
library(tidyverse)
library(vroom)
install.packages('vroom')
# Read in data
train <- vroom("data/train.csv")
head(train)
library(tidyr)
library(tidyverse)
library(vroom)
install.packages('vroom')
library(vroom)
# Read in data
train <- vroom("data/train.csv")
getwd()
setwd
setwd('/Users/chasenielsen/Documents/Stat 348/KaggleBikeShare')
getwd()
# Read in data
train <- vroom("data/train.csv")
head(train)
# Libraries
library(tidyr)
library(tidyverse)
library(vroom)
# Read in data
train <- vroom("data/train.csv")
head(train)
summarise(train)
summary(train)
train %>%
select_if(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = 'free') +
geom_histogram(bins = 30, fill = 'steelblue', color = 'white')
train %>%
select_if(is.numeric) %>%
gather() %>%
ggplot(aes(x = key, y = value)) +
geom_boxplot(fill = 'tomato', alpha = 0.6) +
facet_wrap(~ key, scales = 'free')
train %>%
select_if(is.numeric) %>%
gather() %>%
ggplot(aes(x = key, y = value)) +
geom_boxplot(fill = 'tomato', alpha = 0.6) +
facet_grid(~ key, scales = 'free')
train %>%
select_if(is.numeric) %>%
gather() %>%
ggplot(aes(x = key, y = value)) +
geom_boxplot(fill = 'tomato', alpha = 0.6) +
facet_wrap(~ key, scales = 'free')
train %>%
select_if(is.numeric) %>%
cor(use = "pairwise.complete.obs") %>%
round(2)
train %>%
select_if(is.numeric) %>%
ggcorr(label = TRUE)
library(ggally)
library(GGally)
install.packages('GGally')
library(GGally)
train %>%
select_if(is.numeric) %>%
cor(use = "pairwise.complete.obs") %>%
round(2)
train %>%
select_if(is.numeric) %>%
ggcorr(label = TRUE)
library(patchwork)
train %>%
select_if(is.numeric) %>%
ggcorr(label = TRUE)
# Bar plot of average count by weather
p1 <- ggplot(train, aes(x = factor(weather), y = count)) +
stat_summary(fun = "mean", geom = "bar", fill = "steelblue") +
labs(x = "Weather", y = "Avg Count", title = "Average Rentals by Weather")
# Count by season
p2 <- ggplot(train, aes(x = factor(season), y = count)) +
stat_summary(fun = "mean", geom = "bar", fill = "darkseagreen") +
labs(x = "Season", y = "Avg Count", title = "Average Rentals by Season")
# Distribution of temp
p3 <- ggplot(train, aes(x = temp)) +
geom_histogram(bins = 30, fill = "orange", color = "white") +
labs(x = "Temperature", y = "Frequency", title = "Temperature Distribution")
# Scatter plot of humidity vs count
p4 <- ggplot(train, aes(x = humidity, y = count)) +
geom_point(alpha = 0.4, color = "tomato") +
geom_smooth(method = "lm", se = FALSE, color = "black") +
labs(x = "Humidity", y = "Count", title = "Humidity vs Rentals")
# Arrange in grid
(p1 | p2) / (p3 | p4)
# Arrange in grid
plot <- (p1 | p2) / (p3 | p4)
# Arrange in grid
plot <- (p1 | p2) / (p3 | p4)
# Libraries
library(tidyr)
library(tidyverse)
library(vroom)
library(ggplot2)
library(GGally)
library(patchwork)
# Read in data
train <- vroom("data/train.csv")
head(train)
summary(train)
train %>%
select_if(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = 'free') +
geom_histogram(bins = 30, fill = 'steelblue', color = 'white')
train %>%
select_if(is.numeric) %>%
gather() %>%
ggplot(aes(x = key, y = value)) +
geom_boxplot(fill = 'tomato', alpha = 0.6) +
facet_wrap(~ key, scales = 'free')
train %>%
select_if(is.numeric) %>%
cor(use = "pairwise.complete.obs") %>%
round(2)
train %>%
select_if(is.numeric) %>%
ggcorr(label = TRUE)
# Bar plot of average count by weather
p1 <- ggplot(train, aes(x = factor(weather), y = count)) +
stat_summary(fun = "mean", geom = "bar", fill = "steelblue") +
labs(x = "Weather", y = "Avg Count", title = "Average Rentals by Weather")
# Count by season
p2 <- ggplot(train, aes(x = factor(season), y = count)) +
stat_summary(fun = "mean", geom = "bar", fill = "darkseagreen") +
labs(x = "Season", y = "Avg Count", title = "Average Rentals by Season")
# Distribution of temp
p3 <- ggplot(train, aes(x = temp)) +
geom_histogram(bins = 30, fill = "orange", color = "white") +
labs(x = "Temperature", y = "Frequency", title = "Temperature Distribution")
# Scatter plot of humidity vs count
p4 <- ggplot(train, aes(x = humidity, y = count)) +
geom_point(alpha = 0.4, color = "tomato") +
geom_smooth(method = "lm", se = FALSE, color = "black") +
labs(x = "Humidity", y = "Count", title = "Humidity vs Rentals")
# Arrange in grid
plot <- (p1 | p2) / (p3 | p4)
ggsave("bike_share_eda.pdf", plot = final_plot, width = 10, height = 8)
ggsave("bike_share_eda.pdf", plot = final_plot, width = 10, height = 8)
ggsave("data/bike_share_eda.pdf", plot = final_plot, width = 10, height = 8)
ggsave("data/bike_share_eda.pdf", plot = plot, width = 10, height = 8)
